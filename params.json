{
  "name": "Azure-xplat-clis",
  "tagline": "Microsoft Azure Cross Platform Command Line",
  "body": "# Microsoft Azure Xplat-CLI for Windows, Mac and Linux\r\n\r\n[![NPM version](https://badge.fury.io/js/azure-cli.png)](http://badge.fury.io/js/azure-cli) [![Build Status](https://travis-ci.org/Azure/azure-xplat-cli.png?branch=master)](https://travis-ci.org/Azure/azure-xplat-cli)\r\n\r\nThis project provides a cross-platform command line interface for developers and IT administrators to develop, deploy and manage Microsoft Azure applications.\r\n\r\n## Features\r\n\r\n* Accounts Management\r\n* Azure Service Management\r\n  * Storage\r\n  * Websites\r\n  * Virtual machines\r\n  * Network\r\n  * Mobile Services\r\n  * Service Bus\r\n  * SQL Database\r\n* Azure Resource Management\r\n  * Generic resource groups and deployments management\r\n  * Role based access control\r\n  * Cmdlets for individual resource providers, including compute, storage, network, redis cache, insights, etc.\r\n  * Datalake\r\n  * CDN\r\n  * HDInsight (Note: The HDInsight commands in ASM mode are deprecated and will be removed by Jan. 2017)\r\n  * Key Vault\r\n  * Batch\r\n* Service fabric management (Only works for Linux cluster currently, coming soon on Windows cluster)\r\n\r\nNote: The list of features may not be up-to-date. For accurate command details, type `azure` | `azure -h` | `azure --help` to navigate through the help system. Also, use `azure config mode asm|arm` to switch between service management (Version V1)and resource management (Version V2) of the Azure REST API.\r\n\r\n## Endpoints for Azure\r\n\r\nThe CLI targets **\"Public Azure Cloud\"** by default. You can get more information about the endpoints supported in different environments from [here](./Documentation/Endpoints.md).\r\n\r\n## Non-Interactive Authentication\r\nIf you need to create an automation account for non interactive or scripting scenarios then please take a look at the documentation over [here](https://github.com/Azure/azure-sdk-for-node/blob/master/Documentation/Authentication.md).\r\n\r\n## Supported Environment Variables\r\n\r\nPlease take a look at the list of supported environment variables over [here](https://github.com/Azure/azure-xplat-cli/wiki/Environment-Variables).\r\n\r\n## Installation\r\n\r\n### Installation from a particular branch of this repository\r\n- Uninstall the previously installed CLI\r\n   - If you installed via MSI, then uninstall the windows MSI. For mac installer `sudo azure-uninstall -g`\r\n   - If you installed via npm then execute: `npm uninstall azure-cli –g`\r\n- Clear the global cache: `npm cache clear –g`\r\n- Delete the .streamline folder from the User’s home profile `C:\\Users\\<username>\\.streamline` | `~/.streamline`, if present.\r\n- Download the tarball from this link: `https://github.com/Azure/azure-xplat-cli/archive/<branch-name>.tar.gz`\r\n- Install from the tarball: `npm install –g <path to the downloaded tarball>`\r\n\r\nAnd you should be good to go :). \r\nNote: You may require admin prompt or sudo access to install via npm.\r\n\r\n### Installation from npm\r\n\r\nYou can install the azure-cli npm package directly.\r\n```bash\r\nnpm install -g azure-cli\r\n```\r\n\r\n### Installing the latest version of node.js on different linux flavors\r\n\r\nThis [document](https://nodejs.org/en/download/package-manager/#installing-node-js-via-package-manager) provides simple steps to install the latest version of node.js on a linux system. After successful installation of node.js, you can install \"azure-cli\" via npm as decribed above.\r\n\r\n### Installation on a Docker Host\r\n\r\nIn a Docker host, run:  \r\n```bash\r\nsudo docker run -it microsoft/azure-cli \r\n```\r\nYou can clone the repo and use the \"Dockerfile\" from master branch. It should install the last released version of azure-cli.\r\n\r\n### Pre-compiled installers\r\n\r\n* [Windows](http://aka.ms/webpi-azure-cli)\r\n* [Mac](http://aka.ms/mac-azure-cli) \r\n* [Linux](http://aka.ms/linux-azure-cli)\r\n\r\n\r\n### Configure auto-complete\r\n\r\nAuto-complete is supported for Mac and Linux.\r\n\r\nTo enable it in zsh, run:\r\n\r\n```bash\r\necho '. <(azure --completion)' >> .zshrc\r\n```\r\n\r\nTo enable it in bash, run:\r\n\r\n```bash\r\nazure --completion >> ~/azure.completion.sh\r\n# For macOS Terminal(login shell)\r\necho 'source ~/azure.completion.sh' >> ~/.bash_profile\r\n# For Linux Terminal(non-login shell)\r\necho 'source ~/azure.completion.sh' >> ~/.bashrc\r\n```\r\n\r\n## Get Started\r\n\r\n* First, get authenticated with Microsoft Azure. For details, read [this article](http://azure.microsoft.com/en-us/documentation/articles/xplat-cli/).\r\n  * Option 1: Login with your Microsoft account, such as live-id, or organizational account, or service principals.\r\n  * Option 2: Download and import a publish settings file which contains a management certificate.\r\n\r\nIf you use both mechanisms on the same subscription, Azure Active Directory authentication will be used by default. If you want to go back to management certificate authentication, please use ``azure logout``, which will remove the Azure Active Directory information and bring management certificate authentication back in.\r\n\r\n#### Login directly from xplat-cli (Azure Active Directory authentication) - works with ARM & ASM (Version V2 & V1) of Azure API\r\n\r\n```bash\r\n# This will output an url and a device code for you to use browser to login  \r\nazure login\r\n\r\n# This will prompt for your password in the console\r\nazure login -u <your organizational ID email address>\r\n\r\n# This will login in using a service principal\r\nazure login -u \"<service-principal-id>\" -p \"<key>\" --service-principal --tenant \"<tenant-id>\"\r\n```\r\n\r\n#### Use publish settings file (Management certificate authentication) - works only with ASM (Version V1) of Azure API\r\n\r\n```bash\r\n# Download a file which contains the publish settings information of your subscription.\r\n# This will open a browser window and ask you to log in to get the file.\r\nazure account download\r\n\r\n# Import the file you just downloaded.\r\n# Notice that the file contains credential of your subscription so you don't want to make it public\r\n# (like check in to source control, etc.).\r\nazure account import <file location>\r\n\r\n# Use the commands to manage your services/applications\r\nazure site create --location \"West US\" mywebsite\r\n```\r\n\r\n### azure cli with China Cloud\r\n```bash\r\n# This will log you into the China Cloud environment.\r\n# You can use same set of commands to manage your service/applications\r\nazure login -u <your organizational ID email address> -e AzureChinaCloud\r\n```\r\n\r\n### azure cli on Ubuntu\r\nIf you want to run xplat cli on Ubuntu, then you should install **nodejs-legacy** instead of **nodejs**. For more information please check the following links:\r\n- [why there is a problem with nodejs installation on ubuntu](http://stackoverflow.com/questions/14914715/express-js-no-such-file-or-directory/14914716#14914716)\r\n- [how to solve the nodejs installation problem on ubuntu](https://github.com/expressjs/keygrip/issues/7)\r\n\r\nPlease perform the installation steps in following order:\r\n```bash\r\nsudo apt-get install nodejs-legacy\r\nsudo apt-get install npm\r\nsudo npm install -g azure-cli\r\n```\r\n\r\n## 2 Modes\r\n\r\nStarting from 0.8.0, we are adding a separate mode for Resource Manager. You can use the following command to switch between the\r\n\r\n* Service management: commands using the Azure service management API\r\n* Resource manager: commands using the Azure Resource Manager API\r\n\r\nThey are not designed to work together.\r\n\r\n```bash\r\nazure config mode asm # service management\r\nazure config mode arm # resource manager\r\n```\r\n\r\n**For more details on the commands, please see the [command line tool reference](http://go.microsoft.com/fwlink/?LinkId=252246&clcid=0x409) and this [How to Guide](http://azure.microsoft.com/en-us/documentation/articles/xplat-cli/)**\r\n\r\n## Docker\r\n\r\nUsage is the same as `vm create` command:\r\n\r\n    azure vm docker create [options] <dns-name> <image> <user-name> [password]\r\n\r\nThis command only supports Ubuntu 14.04+ and CoreOS based images. Docker is configured on the VM using HTTPS as described here: https://docs.docker.com/articles/https/ By default, generated TLS certificates are placed in the `~/.docker` directory, and Docker is configured to run on port 2376. These can be configured using new options:\r\n\r\n    -dp, --docker-port [port]              Port to use for docker [2376]\r\n    -dc, --docker-cert-dir [dir]           Directory containing docker certs [~/.docker/]\r\n\t\r\nAfter the VM is created. It can be used as a Docker host with the `-H` option or `DOCKER_HOST` environment variable.\r\n\r\n    docker --tls -H tcp://<my-host>.cloudapp.net:2376 info\r\n\r\nNote: To run docker commands on windows make sure ssl agent is installed.\r\n\t\r\n## Error Diagnostic\r\n\r\n### use the -vv option to see the actual REST requests on the console.\r\n```bash\r\nazure site create --location \"West US\" mytestsite -vv\r\n```\r\n\r\n### Use web debugging proxy\r\nSay, use 'Fiddler', setup the following environment variables before execute commands.\r\n\r\n```bash\r\nset NODE_TLS_REJECT_UNAUTHORIZED=0\r\nset HTTPS_PROXY=http://127.0.0.1:8888\r\n```\r\n\r\n## Running Tests\r\n\r\nSee [this page for instructions](https://github.com/Azure/azure-xplat-cli/wiki/Running-Tests) that describe how to run the test suite.\r\n\r\n## Learn More\r\nFor documentation on how to host Node.js applications on Microsoft Azure, please see the [Microsoft Azure Node.js Developer Center](http://www.windowsazure.com/en-us/develop/nodejs/).\r\n\r\n## Contribute Code or Provide Feedback\r\n\r\nIf you would like to become an active contributor to this project please follow the instructions provided in [Microsoft Azure Projects Contribution Guidelines](http://azure.github.io/guidelines/).\r\n\r\nPlease send pull requests only to the **Dev branch**. Please make sure that you have checked in tests and recorded them live for your contribution. **Pull requests without sufficient tests will not be accepted.**\r\n\r\nIf you encounter any bugs with the library please file an issue in the [Issues](https://github.com/Azure/azure-xplat-cli/issues) section of the project.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}